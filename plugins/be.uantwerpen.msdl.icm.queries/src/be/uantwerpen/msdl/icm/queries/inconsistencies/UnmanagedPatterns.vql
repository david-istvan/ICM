/*******************************************************************************
 * Copyright (c) 2016 Istvan David
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Istvan David - initial API and implementation
 *******************************************************************************/

package be.uantwerpen.msdl.icm.queries.inconsistencies

import "metamodels.process"

pattern unmanagedReadModify(activity1: Activity, property1: Property, activity2: Activity, property2: Property){
	find readModifySharedProperty(activity1, property1, activity2, property2);
	checkProperty == count find checkProperty(activity2, _, property1);
	contracts == count find contract(_, activity1, property1);
	check(checkProperty+contracts==0);
}

pattern unmanagedModifyModify(activity1: Activity, property1: Property, activity2: Activity, property2: Property){
	find modifyModifySharedProperty(activity1, property1, activity2, property2);
	checkProperty == count find checkProperty(activity2, _, property1);
	contracts == count find contract(_, activity1, property1);
	check(checkProperty+contracts==0);
}

pattern unmanaged(activity1: Activity, property1: Property, activity2: Activity, property2: Property){
	find unmanagedReadModify(activity1, property1, activity2, property2);
}
or{
	find unmanagedModifyModify(activity1, property1, activity2, property2);
}

pattern unmanaged2(activity1: Activity, property1: Property, activity2: Activity, property2: Property){
	find unmanaged(activity1, property1, activity2, property2);
}

pattern unmanaged3(activity1: Activity, property1: Property, activity2: Activity, property2: Property){
	find unmanaged(activity1, property1, activity2, property2);
}