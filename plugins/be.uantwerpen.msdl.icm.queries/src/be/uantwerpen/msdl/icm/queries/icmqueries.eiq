package be.uantwerpen.msdl.icm.queries

import "metamodels.process"

/**
 * Activities are connected via a control flow
 */
pattern controlFlowBetweenActivities(activity1: Activity, activity2: Activity, controlFlow: ControlFlow){
	ControlFlow.fromNode(controlFlow, activity1);
	ControlFlow.toNode(controlFlow, activity2);
}

/**
 * Hard control flow constraint
 */
pattern hardControlFlowBetweenActivities(activity1: Activity, activity2: Activity){
	find controlFlowBetweenActivities(activity1, activity2, controlFlow);
	ControlFlow.final(controlFlow, f);
	f == true;
}

/**
 * Soft control flow constraint
 */
pattern softControlFlowBetweenActivities(activity1: Activity, activity2: Activity){
	find controlFlowBetweenActivities(activity1, activity2, controlFlow);
	ControlFlow.final(controlFlow, f);
	f != true;
}

/**
 * Activities w/o control flow constraint
 */
pattern independentActivities(activity1: Activity, activity2: Activity){
	neg find controlFlowBetweenActivities(activity1, activity2, _);
}

pattern intent(activity: Activity, property: Property, intent: Intent){
	Intent.activity(intent, activity);
	Intent.propertyOfIntent(intent, property);
}

/**
 * Two activities touch the same property and they have a shared object.
 * TODO this is not enough: types of intents lead back to temporal tolerance!!!
 */
pattern sharedProperty(activity1: Activity, activity2: Activity, property: Property, object: Object){
	find intent(activity1, property, _);
	find intent(activity2, property, _);
	Activity.dataFlowTo(activity1, object);
	Activity.dataFlowFrom(activity2, object);
}