/*******************************************************************************
 * Copyright (c) 2016 Istvan David
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Istvan David - initial API and implementation
 *******************************************************************************/

package be.uantwerpen.msdl.icm.queries.inconsistencies

import "metamodels.process"
import pattern be.uantwerpen.msdl.icm.queries.general.nodeGloballyReachableFromNode
import pattern be.uantwerpen.msdl.icm.queries.general.intent
import be.uantwerpen.msdl.icm.queries.general.propertyGloballyReachableFromProperty

pattern sharedProperty(activity1: Activity, intent1: Intent, property1: Property, activity2: Activity, intent2: Intent, property2: Property){
	find intent(activity1, property1, intent1);
	find intent(activity2, property2, intent2);
	find nodeGloballyReachableFromNode(activity2, activity1);
	find propertyGloballyReachableFromProperty(property1, property2);
}

pattern readModifySharedProperty(activity1: Activity, property1: Property, activity2: Activity, property2: Property){
	find sharedProperty(activity1, intent1, property1, activity2, intent2, property2);
	Intent.type(intent1, IntentType::READ);
	Intent.type(intent2, IntentType::MODIFY);
}

pattern readModifySharedProperty2(activity1: Activity, property1: Property, activity2: Activity, property2: Property, process: Process){
	find readModifySharedProperty(activity1, property1, activity2, property2);
	Process.node(process, activity1);
	Process.node(process, activity2);
}

pattern forkOutControl(forkNode : Fork){
	Fork.controlOut(forkNode,_);
}